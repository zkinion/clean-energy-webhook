version: '2'

services:
  zookeeper:
    image: zookeeper
    ports:
      - 2181:2181
    logging:
      driver: none
    tmpfs: "/datalog"
  kafka:
    platform: linux/arm64
    #image: wurstmeister/kafka:2.12-2.3.0
    image: bitnami/kafka:latest
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_CREATE_TOPICS: "events:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: yes
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
#      - ./kafka/data/zookeeper_data:/var/lib/zookeeper/data
#      - ./kafka/data/zookeeper_log:/var/lib/zookeeper/log
    depends_on:
      - zookeeper
    logging:
      driver: none

#  db:
#    image: mysql:8.0
#    command: mysqld --default-authentication-plugin=mysql_native_password --port=3307
#    volumes:
#      - ./db/mysql:/var/lib/mysql
#    ports:
#      - 3307:3307
#    environment:
#      MYSQL_ROOT_PASSWORD: root
#      MYSQL_DATABASE: events
#      MYSQL_USER: events
#      MYSQL_PASSWORD: events
#    logging:
#      driver: none

  webhooks_web:
    env_file:
      - .env
    environment:
      KAFKA_BROKER_LIST: kafka:9092
      KAFKA_GROUP_ID: events
      EVENT_TOPIC: events
#      MYSQL_HOST: db
#      MYSQL_DATABASE: events
#      MYSQL_USER: events
#      MYSQL_PASSWORD: events
      MYSQL_HOST: host.docker.internal
      MYSQL_DATABASE: events
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_PORT: 3306
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./src/js/:/app/js/
      - ./src/public/:/app/public/
      - ./src/views/:/app/views/
      - ./index.js:/app/index.js
      - ./db:/app/db
      - ./tools:/app/tools
    ports:
      - 3000:3000
    command: ./tools/wait-for-it.sh host.docker.internal:3306 -t 60 --strict -- npm run dev
    depends_on:
      - kafka
      # - db
